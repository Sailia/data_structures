{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red63\green127\blue95;\red127\green0\blue85;\red0\green0\blue192;
\red42\green0\blue255;\red106\green62\blue62;}
{\*\expandedcolortbl;;\csgenericrgb\c24706\c49804\c37255;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c0\c0\c75294;
\csgenericrgb\c16471\c0\c100000;\csgenericrgb\c41569\c24314\c24314;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf0 	\cf2 // shared resources between thread 1 and thread 2 are:\cf0 \
	\cf2 // DONOT CHANGE THESE VARIABLE\cf0 \
	\cf3 public\cf0  \cf3 static\cf0  \cf3 int\cf0  \cf4 BufferSize\cf0  = 10; 					\cf2 //the size of the buffer\cf0 \
	\cf3 public\cf0  \cf3 static\cf0  \cf3 int\cf0  \cf4 buffer\cf0 [] = \cf3 new\cf0  \cf3 int\cf0 [\cf4 BufferSize\cf0 ];	\cf2 //the shared buffer\cf0 \
	\
	\
	\cf2 // add any further resources you think Ascending() and Descending()functions must share below\cf0 \
	\
\
	\cf3 static\cf0  Semaphore \cf4 sem\cf0  = \cf3 new\cf0  Semaphore(1);\
	\cf3 public\cf0  \cf3 static\cf0  \cf3 int\cf0  \cf4 count\cf0  = 0;\
	\cf3 public\cf0  \cf3 static\cf0  \cf3 int\cf0  \cf4 temp\cf0  = \cf4 buffer\cf0 [\cf4 count\cf0 ];\
	\
\
	\cf2 //--------------------------------------------end of shared resources section\cf0 \
	\
	\
\pard\pardeftab720\partightenfactor0
\cf3 public\cf0  \cf3 static\cf0  \cf3 void\cf0  Ascending()\{\
	    \cf3 try\cf0  \{\
	    		\
	    		System.\cf4 out\cf0 .println(\cf5 "The Ascending is trying to sort the shared buffer"\cf0 );\
					\
				    \
	    		\cf2 // Sort the buffer in ascending order\cf0 \
	    		\cf2 // Call displayStatus after you sort and before release the lock\cf0 \
	    		\cf2 // Implement the Ascending functionality in the area below\cf0 \
    \
	    		\cf4 sem\cf0 .acquire();\
	    		Arrays.sort(\cf4 buffer\cf0 , 0, \cf4 buffer\cf0 .\cf4 length\cf0 );\
	    		displayStatus();\
	    		\cf4 sem\cf0 .release();	\
	    		\cf2 //--------------------------------------------end of Ascending function\cf0 \
	    		\
	   	\} \cf3 catch\cf0  (Exception \cf6 e\cf0 ) \{\
	   		System.\cf4 out\cf0 .println(\cf5 "Problem with the Ascending function "\cf0 +\cf6 e\cf0 .toString());\
	   	\}\
	\}\
		\
	\cf3 public\cf0  \cf3 static\cf0  \cf3 void\cf0  Descending()\{\
	    \cf3 try\cf0  \{\
    			\
	    	System.\cf4 out\cf0 .println(\cf5 "The Descending is trying to sort the shared buffer"\cf0 );\
			\
		    \
    		\cf2 // Sort the buffer in descending order\cf0 \
    		\cf2 // Call displayStatus after you sort and before release the lock\cf0 \
    		\cf2 // Implement the Descending functionality in the area below\cf0 \
	    	\cf4 sem\cf0 .acquire();\
	    	Collections.reverse(Arrays.asList(\cf4 buffer\cf0 ));\
			displayStatus();\
			\cf4 sem\cf0 .release();\
\
	    	\cf2 //--------------------------------------------end of Descending function\cf0 \
\
	   	\} \cf3 catch\cf0  (Exception \cf6 e\cf0 ) \{\
	   		System.\cf4 out\cf0 .println(\cf5 "Problem with the Descending function "\cf0 +\cf6 e\cf0 .toString());\
	   	\}\
	\}	\
	\
\
	\
	\
}